#include <msp430xG46x.h>     ;define controlled include file

         ORG 1100h
Id1      DW   0,9,0,0,8,2,9,1   ; positive numbers
Id2      DW   1,5,3,9,5,6,9,9   ; positive numbers
size     DW   8
Parity1 DS16 8  
Parity2 DS16 8      

         RSEG   CSTACK
         RSEG   CODE                  ; ORG   0x3100 - place program in 'CODE' segment in to Flash memory                     
         
;------------------------------------------------------------------------------- 
ParityFunc MOV 6(SP),R4 //move 6(SP) to R5
           MOV 2(SP),R7 //move 2(SP) to R7
loop       MOV @R4,R5 //move M[R4] to R5
           CLR R6 //R6=0
           RRC R5 //rotate right with carry in order to check parity
           ADC R6 //add carry to R6
           MOV R6,0(R7) //move value of R6 to M[R7]
           INCD R4 //R4+=2
           INCD R7 //R7+=2
           DEC 4(SP) //4(SP)--
           JNZ loop //if 4(SP) not zero jump to loop
           RET //end of function
;------------------------------------------------------------------------------- 
Main      MOV #SFE(CSTACK),SP // STACK STARTS AT 0x2100
          PUSH #Id1 //move Id1 pointer to stack
          PUSH size // move size to stack
          PUSH #Parity1 //move parity1 pointer to stack
          CALL #ParityFunc //call ParityFunc
          PUSH #Id2 //move Id2 pointer to stack
          PUSH size // move size to stack
          PUSH #Parity2 //move parity1 pointer to stack
          CALL #ParityFunc //call ParityFunc
          
          

 //end of program
  
L        JMP   L                            ; infinite loop
         NOP                                ; to remove warnings
;-------------------------------------------------------------------------------
         COMMON  INTVEC                  ; Interrupt Vectors
;-------------------------------------------------------------------------------
         ORG     RESET_VECTOR            ; POR, ext. Reset
         DW      Main
         END
